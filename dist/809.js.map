{"version":3,"file":"809.js","mappings":"kNAcA,MAAMA,EAAoBC,EAAAA,KAapBC,EAAsB,CAC1BC,MAAO,SACP,mBAAoB,UAGtB,SAASC,IAQP,MAAO,CACLC,MAAO,CACL,CACEC,MAAMC,EAAAA,EAAAA,oBAAkB,IAAM,oDARpB,CACdC,YAAa,WACbC,WAJiB,yBAWbC,MAAO,Y,cC5Cf,IAAIC,EAAM,CACT,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,MAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,KAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,IAClCJ,EAAoBS,KAG7BX,EAAoBY,KAAO,IAAOC,OAAOD,KAAKb,GAC9CC,EAAoBW,GAAK,IACzBG,EAAOC,QAAUf","sources":["webpack://@bahmni/lab-app/./src/index.ts","webpack://@bahmni/lab-app//Users/noumanmemon/Documents/projects/scopo/bahmni/bahmni-lab-frontend/translations|lazy|nonrecursive|/.json$/"],"sourcesContent":["/**\n * This is the entrypoint file of the application. It communicates the\n * important features of this microfrontend to the app shell. It\n * connects the app shell to the React application(s) that make up this\n * microfrontend.\n */\n\nimport {getAsyncLifecycle} from '@openmrs/esm-framework'\n\n/**\n * This tells the app shell how to obtain translation files: that they\n * are JSON files in the directory `../translations` (which you should\n * see in the directory structure).\n */\nconst importTranslation = require.context(\n  '../translations',\n  false,\n  /.json$/,\n  'lazy',\n)\n\n/**\n * This tells the app shell what versions of what OpenMRS backend modules\n * are expected. Warnings will appear if suitable modules are not\n * installed. The keys are the part of the module name after\n * `openmrs-module-`; e.g., `openmrs-module-fhir2` becomes `fhir2`.\n */\nconst backendDependencies = {\n  fhir2: '^1.2.0',\n  'webservices.rest': '^2.2.0',\n}\n\nfunction setupOpenMRS() {\n  const moduleName = '@bahmni/lab-lite-app'\n\n  const options = {\n    featureName: 'lab-lite',\n    moduleName,\n  }\n\n  return {\n    pages: [\n      {\n        load: getAsyncLifecycle(() => import('./lab-entry'), options),\n        route: 'home',\n      },\n    ],\n  }\n}\n\nexport {backendDependencies, importTranslation, setupOpenMRS}\n","var map = {\n\t\"./en.json\": [\n\t\t574,\n\t\t574\n\t],\n\t\"./fr.json\": [\n\t\t757,\n\t\t757\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 979;\nmodule.exports = webpackAsyncContext;"],"names":["importTranslation","require","backendDependencies","fhir2","setupOpenMRS","pages","load","getAsyncLifecycle","featureName","moduleName","route","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports"],"sourceRoot":""}